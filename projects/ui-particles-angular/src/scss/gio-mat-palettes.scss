/*
 * Copyright (C) 2021 The Gravitee team (http://gravitee.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
@use '@angular/material' as mat;

/**
  ✏️ Note: $mat-primary-palette, $mat-accent-palette, $mat-error-palette should also be defined with Material palettes 100 200 300 ...
  because material use these keys for some components.
  Not needed for other palettes because material doesn't use them.
 */

// Primary
$mat-primary-palette: mat.m2-define-palette(
  (
    // Keep sync GIO color token with Material color token
    darker80: #001f1f,
    900: #001f1f,
    darker60: #003d3d,
    800: #003d3d,
    darker40: #005c5c,
    700: #005c5c,
    darker20: #007a7a,
    600: #007a7a,
    default: #099,
    500: #099,
    lighter20: #0bd2d2,
    400: #0bd2d2,
    lighter40: #45ffff,
    300: #45ffff,
    lighter60: #91ffff,
    200: #91ffff,
    lighter80: #d6ffff,
    100: #d6ffff,
    50: #d6ffff,
    contrast: (
      darker80: #fff,
      900: #fff,
      darker60: #fff,
      800: #fff,
      darker40: #fff,
      700: #fff,
      darker20: #fff,
      600: #fff,
      default: #fff,
      500: #fff,
      lighter20: #000,
      400: #000,
      lighter40: #000,
      300: #000,
      lighter60: #000,
      200: #000,
      lighter80: #000,
      100: #000,
      50: #000,
    )
  ),
  default,
  lighter80,
  darker80
);

// Accent
$mat-accent-palette: mat.m2-define-palette(
  (
    darker80: #1b162f,
    900: #1b162f,
    darker60: #362c5e,
    800: #362c5e,
    darker40: #51438e,
    700: #51438e,
    darker20: #6c59bd,
    600: #6c59bd,
    default: #876fec,
    500: #876fec,
    lighter20: #9f8cf0,
    400: #9f8cf0,
    lighter40: #b7a9f4,
    300: #b7a9f4,
    lighter60: #cdc5f7,
    200: #cdc5f7,
    lighter80: #e7e2fb,
    100: #e7e2fb,
    50: #e7e2fb,
    contrast: (
      darker80: #fff,
      900: #fff,
      darker60: #fff,
      800: #fff,
      darker40: #fff,
      700: #fff,
      darker20: #fff,
      600: #fff,
      default: #fff,
      500: #fff,
      lighter20: #000,
      400: #000,
      lighter40: #000,
      300: #000,
      lighter60: #000,
      200: #000,
      lighter80: #000,
      100: #000,
      50: #000,
    ),
  ),
  default,
  lighter80,
  darker80
);

// Success color
$mat-success-palette: mat.m2-define-palette(
  (
    darker80: #002c1c,
    darker60: #056946,
    darker40: #018e5d,
    darker20: #02c37f,
    default: #0de598,
    lighter20: #43ebaf,
    lighter40: #78f2c7,
    lighter60: #aef8de,
    lighter80: #e4fff5,
    contrast: (
      darker80: #fff,
      darker60: #fff,
      darker40: #000,
      darker20: #000,
      default: #000,
      lighter20: #000,
      lighter40: #000,
      lighter60: #000,
      lighter80: #000,
    ),
  ),
  default,
  lighter80,
  darker80
);

// Warning color
$mat-warning-palette: mat.m2-define-palette(
  (
    darker80: #2c0c01,
    darker60: #551c07,
    darker40: #983611,
    darker20: #bf3f0e,
    default: #fe733f,
    lighter20: #fe9168,
    lighter40: #feb092,
    lighter60: #ffcebb,
    lighter80: #ffece5,
    contrast: (
      darker80: #fff,
      darker60: #fff,
      darker40: #fff,
      darker20: #fff,
      default: #fff,
      lighter20: #000,
      lighter40: #000,
      lighter60: #000,
      lighter80: #000,
    ),
  ),
  default,
  lighter80,
  darker80
);

// Error color
$mat-error-palette: mat.m2-define-palette(
  (
    darker80: #2c0015,
    900: #2c0015,
    darker60: #5f002f,
    800: #5f002f,
    darker40: #930149,
    700: #930149,
    darker20: #cb0366,
    600: #cb0366,
    default: #ec4899,
    500: #ec4899,
    lighter20: #f170b0,
    400: #f170b0,
    lighter40: #f698c7,
    300: #f698c7,
    lighter60: #fac1dd,
    200: #fac1dd,
    lighter80: #ffe9f4,
    100: #ffe9f4,
    50: #ffe9f4,
    contrast: (
      darker80: #fff,
      900: #fff,
      darker60: #fff,
      800: #fff,
      darker40: #fff,
      700: #fff,
      darker20: #fff,
      600: #fff,
      default: #fff,
      500: #fff,
      lighter20: #000,
      400: #000,
      lighter40: #000,
      300: #000,
      lighter60: #000,
      200: #000,
      lighter80: #000,
      100: #000,
      50: #000,
    ),
  ),
  default,
  lighter80,
  darker80
);

// Basic color
$mat-basic-palette: mat.m2-define-palette(
  (
    black: #000,
    white: #fff,
    disabled: rgb(0 0 0 / 12%),
    // Same color as the disabled color of material
    contrast:
      (
        black: #fff,
        white: #000,
        disabled: rgb(0 0 0 / 26%),
        // Same color as the disabled color of material
      ),
  ),
  black,
  white,
  white
);

// Space color
$mat-space-palette: mat.m2-define-palette(
  (
    default: #100c27,
    lighter10: #1c1e39,
    lighter20: #33354d,
    lighter30: #494b61,
    lighter40: #606274,
    lighter50: #777888,
    lighter60: #8e8f9c,
    lighter70: #a4a5b0,
    lighter80: #bbbcc4,
    contrast: (
      default: #fff,
      lighter10: #fff,
      lighter20: #fff,
      lighter30: #fff,
      lighter40: #fff,
      lighter50: #000,
      lighter60: #000,
      lighter70: #000,
      lighter80: #000,
    ),
  ),
  default,
  lighter80,
  default
);

// Space color
$mat-dove-palette: mat.m2-define-palette(
  (
    darker80: #313133,
    darker70: #49494c,
    darker60: #616266,
    darker50: #7a7b80,
    darker40: #98999f,
    darker30: #b4b5bb,
    darker20: #d3d5dc,
    darker10: #e7e8ef,
    default: #f7f8fd,
    contrast: (
      darker80: #fff,
      darker70: #fff,
      darker60: #fff,
      darker50: #000,
      darker40: #000,
      darker30: #000,
      darker20: #000,
      darker10: #000,
      default: #000,
    ),
  ),
  default,
  darker80,
  default
);

// Cyan color
$mat-cyan-palette: mat.m2-define-palette(
  (
    default: #006fb9,
    lighter20: #389adb,
    lighter40: #83c6f2,
    lighter60: #c4e8ff,
    lighter80: #e9f6ff,
    contrast: (
      default: #fff,
      lighter20: #000,
      lighter40: #000,
      lighter60: #000,
      lighter80: #000,
    ),
  ),
  default,
  lighter80,
  default
);

// Blue palette
$mat-blue-palette: mat.m2-define-palette(
  (
    default: #313fbf,
    lighter20: #6978ff,
    lighter40: #939dfc,
    lighter60: #bbc5ff,
    lighter80: #f1f3ff,
    contrast: (
      default: #fff,
      lighter20: #000,
      lighter40: #000,
      lighter60: #000,
      lighter80: #000,
    ),
  ),
  default,
  lighter80,
  default
);

// Method color
$mat-method-palette: mat.m2-define-palette(
  (
    patch: mat.m2-get-color-from-palette($mat-accent-palette, lighter80),
    post: mat.m2-get-color-from-palette($mat-warning-palette, lighter80),
    put: mat.m2-get-color-from-palette($mat-dove-palette, darker10),
    get: mat.m2-get-color-from-palette($mat-primary-palette, lighter80),
    delete: mat.m2-get-color-from-palette($mat-error-palette, lighter80),
    option: mat.m2-get-color-from-palette($mat-success-palette, lighter80),
    trace: mat.m2-get-color-from-palette($mat-cyan-palette, lighter80),
    head: mat.m2-get-color-from-palette($mat-blue-palette, lighter80),
    connect: mat.m2-get-color-from-palette($mat-blue-palette, lighter80),
    other: mat.m2-get-color-from-palette($mat-blue-palette, lighter80),
    contrast: (
      patch: mat.m2-get-color-from-palette($mat-accent-palette, darker40),
      post: mat.m2-get-color-from-palette($mat-warning-palette, darker20),
      put: mat.m2-get-color-from-palette($mat-dove-palette, lighter70),
      get: mat.m2-get-color-from-palette($mat-primary-palette, darker60),
      delete: mat.m2-get-color-from-palette($mat-error-palette, darker20),
      option: mat.m2-get-color-from-palette($mat-success-palette, darker60),
      trace: mat.m2-get-color-from-palette($mat-cyan-palette, default),
      head: mat.m2-get-color-from-palette($mat-blue-palette, default),
      connect: mat.m2-get-color-from-palette($mat-blue-palette, default),
      other: mat.m2-get-color-from-palette($mat-blue-palette, default),
    ),
  ),
  patch,
  patch,
  patch
);
