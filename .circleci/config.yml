version: 2.1

orbs:
  secrethub: secrethub/cli@1.1.0
  gh: circleci/github-cli@1.0.4

executors:
  node-lts:
    parameters:
      class:
        description: The resource class
        type: enum
        enum: ['small', 'medium', 'large', 'xlarge']
        default: 'medium'
    docker:
      - image: cimg/node:14.18
    resource_class: <<parameters.class>>

commands:
  yarn-install:
    description: 'Runs Yarn install'
    steps:
      - restore_cache:
          name: Restore Yarn cache
          keys:
            - gio-ui-particles-yarn-cache-v1-{{ checksum "yarn.lock" }}
      - run:
          name: 'Install Yarn dependencies'
          command: yarn install
      - save_cache:
          paths:
            - .yarn/cache
          key: gio-ui-particles-yarn-cache-v1-{{ checksum "yarn.lock" }}

jobs:
  lint-test:
    executor:
      class: small
      name: node-lts
    steps:
      - checkout
      - yarn-install
      - run:
          name: Run lint
          command: yarn lint
      - run:
          name: Run test
          command: yarn test

  build:
    parameters:
      package_name:
        type: string
    executor:
      class: medium
      name: node-lts
    steps:
      - checkout
      - yarn-install
      - run:
          name: Build
          command: yarn build
          working_directory: << parameters.package_name >>
      - persist_to_workspace:
          root: .
          paths:
            - << parameters.package_name >>/dist
            - node_modules

  prerelease:
    parameters:
      package_name:
        type: string
    executor:
      class: small
      name: node-lts
    steps:
      - checkout
      - attach_workspace:
          at: .
      - gh/setup
      - run:
          name: üêô Prerelease the Kraken
          working_directory: << parameters.package_name >>/dist/<< parameters.package_name >>
          command: |
            export version=$(git describe --tags --abbrev=0 | tr -d v)
            export commit=$(git rev-parse --short HEAD)
            export branch=$(git rev-parse --abbrev-ref HEAD | sed -E 's/[~^]+//g' | sed -E 's/[^a-zA-Z0-9]+/-/g' | sed -E 's/^-+|-+$//g' | tr A-Z a-z)
            export versionTag=$version-$branch-$commit

            echo //npm.pkg.github.com/:_authToken=$GITHUB_TOKEN > ~/.npmrc

            npm version $versionTag --git-tag-version=false
            npm publish --tag prerelease

            echo "export VERSION_TAG=$versionTag" >> $BASH_ENV
      - run:
          name: üêô Comment PR
          command: |
            # First check there is an associated pull request, otherwise just stop the job here
            if ! gh pr view --json title;
            then
              echo "No PR found for this branch, stopping the job here."
              exit 0
            fi

            gh pr comment --body "**Gravitee.io Automatic Deployment**

            A prerelease version of this package has been published! üöÄ

            **This is still experimental ‚ö†Ô∏è**

            To use it in your project run the following lines:
            \`\`\`shell
            echo @gravitee-io:registry=https://npm.pkg.github.com > .npmrc

            npm install @gravitee-io/ui-particles-angular@${VERSION_TAG}

            yarn add @gravitee-io/ui-particles-angular@${VERSION_TAG}
            \`\`\`
            "

  release:
    parameters:
      package_name:
        type: string
      dry_run:
        type: boolean
        default: true
    executor:
      class: small
      name: node-lts
    steps:
      - add_ssh_keys:
          fingerprints:
            - 'ac:88:23:8f:c6:0f:7d:f0:fc:df:73:20:34:56:02:6c'
      - checkout
      - attach_workspace:
          at: .
      - when:
          condition: << parameters.dry_run >>
          steps:
            - run:
                name: üßë‚Äçüî¨ dry-run release
                working_directory: << parameters.package_name >>
                command: yarn semantic-release --debug --no-ci --dry-run
      - when:
          condition:
            not: << parameters.dry_run >>
          steps:
            - run:
                name: üöÄ Release the Kraken
                working_directory: << parameters.package_name >>
                command: yarn semantic-release

workflows:
  version: 2.1
  validate_build_branch:
    # Trigger on all branches except `master`
    when:
      and:
        - not:
            equal: [master, << pipeline.git.branch >>]
    jobs:
      - lint-test:
          name: Lint & Test
      - build:
          name: Build Angular
          package_name: ui-particles-angular
      - prerelease:
          name: Prerelease Angular
          package_name: ui-particles-angular
          pre-steps:
            - secrethub/env-export:
                secret-path: graviteeio/cicd/graviteebot/github_personal_access_token
                var-name: GITHUB_TOKEN
          context: gravitee-qa
          requires:
            - Build Angular
      - release:
          name: '[Dry Run] Release Angular'
          package_name: ui-particles-angular
          dry_run: true
          pre-steps:
            - secrethub/env-export:
                secret-path: graviteeio/cicd/graviteebot/github_personal_access_token
                var-name: NPM_TOKEN
            - secrethub/env-export:
                secret-path: graviteeio/cicd/graviteebot/github_personal_access_token
                var-name: GITHUB_TOKEN
            - secrethub/env-export:
                secret-path: graviteeio/cicd/graviteebot/git/user/name
                var-name: GIT_AUTHOR_NAME
            - secrethub/env-export:
                secret-path: graviteeio/cicd/graviteebot/git/user/email
                var-name: GIT_AUTHOR_EMAIL
            - secrethub/env-export:
                secret-path: graviteeio/cicd/graviteebot/git/user/name
                var-name: GIT_COMMITTER_NAME
            - secrethub/env-export:
                secret-path: graviteeio/cicd/graviteebot/git/user/email
                var-name: GIT_COMMITTER_EMAIL
          context: gravitee-qa
          requires:
            - Build Angular

  release:
    # Trigger only for `master` branch
    when:
      or:
        - equal: [master, << pipeline.git.branch >>]
        # TODO: Remove me. Used to test release
        - equal: [circleci, << pipeline.git.branch >>]
    jobs:
      - build:
          name: Build Angular
          package_name: ui-particles-angular
      - lint-test:
          name: Lint & Test
      - release:
          name: Release Angular
          package_name: ui-particles-angular
          dry_run: false
          pre-steps:
            - secrethub/env-export:
                secret-path: graviteeio/cicd/graviteebot/github_personal_access_token
                var-name: NPM_TOKEN
            - secrethub/env-export:
                secret-path: graviteeio/cicd/graviteebot/github_personal_access_token
                var-name: GITHUB_TOKEN
            - secrethub/env-export:
                secret-path: graviteeio/cicd/graviteebot/git/user/name
                var-name: GIT_AUTHOR_NAME
            - secrethub/env-export:
                secret-path: graviteeio/cicd/graviteebot/git/user/email
                var-name: GIT_AUTHOR_EMAIL
            - secrethub/env-export:
                secret-path: graviteeio/cicd/graviteebot/git/user/name
                var-name: GIT_COMMITTER_NAME
            - secrethub/env-export:
                secret-path: graviteeio/cicd/graviteebot/git/user/email
                var-name: GIT_COMMITTER_EMAIL
          context: gravitee-qa
          requires:
            - Build Angular
            - Lint & Test
