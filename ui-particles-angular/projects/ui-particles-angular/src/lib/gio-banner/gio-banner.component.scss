/*
 * Copyright (C) 2015 The Gravitee team (http://gravitee.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
@use 'sass:map';
@use '@angular/material' as mat;

@use '../../scss' as gio;

$background: map.get(gio.$mat-theme, background);

// Map for palette by type
$types: (
  error: gio.$mat-error-palette,
  info: gio.$mat-primary-palette,
  success: gio.$mat-success-palette,
  warning: gio.$mat-warning-palette,
);

:host {
  display: block;
  margin: 8px 0;
}

.banner {
  display: flex;
  align-items: center;
  padding: 0 16px;
  border-radius: 4px;

  @each $typeName, $typePalette in $types {
    &.#{$typeName} {
      border: 1px solid mat.get-color-from-palette($typePalette, default);
      background-color: mat.get-color-from-palette($background, card);
      box-shadow: 8px 0 0 0 mat.get-color-from-palette($typePalette, lighter, 0.12) inset;
      color: mat.get-color-from-palette($typePalette, darker);

      $typeTarget: &; // current css target
      // when banner is inside mat-card
      :host-context(.mat-card) {
        #{$typeTarget} {
          background-color: mat.get-color-from-palette($typePalette, lighter, 0.12);
          box-shadow: none;
        }
      }
    }
  }

  &__icon {
    padding-top: 8px;
    margin-right: 16px;
    opacity: 0.9;
  }

  &__content {
    flex: 1 1 auto;
    padding: 8px 0;
    line-height: normal;
  }
}
