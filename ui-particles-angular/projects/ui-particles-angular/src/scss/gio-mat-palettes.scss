/*
 * Copyright (C) 2021 The Gravitee team (http://gravitee.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
@use '@angular/material' as mat;

// Primary
$mat-primary-palette: mat.define-palette(
  (
    darker: #2546c0,
    default: #325afe,
    lighter: #d6deff,
    contrast: (
      darker: #d6deff,
      default: #d6deff,
      lighter: #2546c0,
    ),
  ),
  default,
  lighter,
  darker
);

// Accent
$mat-accent-palette: mat.define-palette(
  (
    darker: #346aa5,
    default: #01b6ff,
    lighter: #ebf7ff,
    contrast: (
      darker: #ebf7ff,
      default: #292c35,
      lighter: #346aa5,
    ),
  ),
  default,
  lighter,
  darker
);

// Content color
$mat-content-palette: mat.define-palette(
  (
    darker: #292c35,
    default: #828aa1,
    disabled: #d6d6d6,
    lighter: #ffffff,
    contrast: (
      darker: #eee,
      default: #000,
      disabled: #000,
      lighter: #000,
    ),
  ),
  default,
  lighter,
  darker
);

// Neutral color
$mat-neutral-palette: mat.define-palette(
  (
    darker: #535b76,
    default: #e6e8ec,
    lighter: #eff2ff,
    contrast: (
      darker: #eff2ff,
      default: #292c35,
      lighter: #535b76,
    ),
  ),
  default,
  lighter,
  darker
);

// Success color
$mat-success-palette: mat.define-palette(
  (
    darker: #2c6249,
    default: #53d687,
    lighter: #ebfdee,
    contrast: (
      darker: #ebfdee,
      default: #292c35,
      lighter: #2c6249,
    ),
  ),
  default,
  lighter,
  darker
);

// Warning color
$mat-warning-palette: mat.define-palette(
  (
    darker: #c67700,
    default: #feaa2e,
    lighter: #fef9ef,
    contrast: (
      darker: #fef9ef,
      default: #292c35,
      lighter: #c67700,
    ),
  ),
  default,
  lighter,
  darker
);

// Error color
$mat-error-palette: mat.define-palette(
  (
    darker: #bf3133,
    default: #e36160,
    lighter: #fff5f4,
    contrast: (
      darker: #fff5f4,
      default: #292c35,
      lighter: #bf3133,
    ),
  ),
  default,
  lighter,
  darker
);

// Decorative color
$mat-decorative-palette: mat.define-palette(
  (
    background: #eff2ff,
    lighter-background: #f7f8fd,
    surface: #ffffff,
    divider: #f3f4f9,
    contrast: (
      background: #292c35,
      default: #292c35,
      surface: #292c35,
      divider: #000,
    ),
  ),
  surface,
  surface,
  surface
);

// Method color
$mat-method-palette: mat.define-palette(
  (
    patch: #e5fffb,
    post: #ebfdee,
    put: #fbf2f2,
    get: #ebf7ff,
    delete: #fff5f4,
    contrast: (
      patch: #337777,
      post: #2c6249,
      put: #a15e35,
      get: #346aa5,
      delete: #bf3133,
    ),
  ),
  patch,
  patch,
  patch
);
